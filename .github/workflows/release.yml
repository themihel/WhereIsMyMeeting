name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Check if yarn cache exists
        if: ${{ steps.yarn-cache.outputs.cache-hit != 'false' }}
        run: echo "Yarn cache found, install using cached files!"
      - name: Install dependencies using yarn # --prefer-offline for hitting the cache
        run: yarn install --frozen-lockfile --no-progress --prefer-offline
      - name: Run tests
        run: yarn test
      - name: Get latest version of package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Check wether manifest uses the same version
        run: echo "coming soon" #TODO
      - name: Compress extension to a .zip file
        uses: papeloto/action-zip@v1
        with:
          files: extension/
          dest: WhereIsMyMeeting.zip
      - name: Create Github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.current-version}}
          release_name: v${{ steps.package-version.outputs.current-version}}
          body: |
            Further information will be added soon!
          draft: false
          prerelease: false
      - name: Add extension to Github release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WhereIsMyMeeting.zip
          asset_name: WhereIsMyMeeting.zip
          asset_content_type: application/zip
      - name: Upload extension to chrome store
        run: echo "Coming soon" #TODO